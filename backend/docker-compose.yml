version: '2.4'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    networks:
      - kkobuk-network
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - kkobuk-network
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes", "--appendfsync", "everysec", "--save", "900", "1", "--save", "300", "10", "--save", "60", "10000", "--dbfilename", "dump.rdb", "--dir", "../data", "--requirepass", "kkobuk", "--masterauth", "kkobuk", "--notify-keyspace-events", "Ex" ]
    volumes:
      - ../data/redis:/data # RDB 및 AOF 파일이 저장될 디렉토리

  redis-replica-1:
    image: redis:latest
    container_name: redis-replica-1
    networks:
      - kkobuk-network
    ports:
      - "6380:6379"
    command: [ "redis-server", "--slaveof", "redis", "6379", "--appendonly", "yes", "--appendfsync", "everysec", "--save", "900", "1", "--save", "300", "10", "--save", "60", "10000", "--dbfilename", "dump.rdb", "--dir", "/data", "--requirepass", "kkobuk", "--masterauth", "kkobuk" ]
    volumes:
      - ../data/redis-replica-1:/data
    depends_on:
      - redis

  redis-replica-2:
    image: redis:latest
    container_name: redis-replica-2
    networks:
      - kkobuk-network
    ports:
      - "6381:6379"
    command: [ "redis-server", "--slaveof", "redis", "6379", "--appendonly", "yes", "--appendfsync", "everysec", "--save", "900", "1", "--save", "300", "10", "--save", "60", "10000", "--dbfilename", "dump.rdb", "--dir", "../data", "--requirepass", "kkobuk", "--masterauth", "kkobuk" ]
    volumes:
      - ../data/redis-replica-2:/data
    depends_on:
      - redis

  redis-sentinel-1:
    image: redis:latest
    container_name: redis-sentinel-1
    networks:
      - kkobuk-network
    ports:
      - "26379:26379"
    command: [ "redis-sentinel", "/etc/sentinel.conf" ]
    volumes:
      - ../sentinel/sentinel-1.conf:/etc/sentinel.conf
    depends_on:
      - redis

  redis-sentinel-2:
    image: redis:latest
    container_name: redis-sentinel-2
    networks:
      - kkobuk-network
    ports:
      - "26380:26379"
    command: [ "redis-sentinel", "/etc/sentinel.conf" ]
    volumes:
      - ../sentinel/sentinel-2.conf:/etc/sentinel.conf
    depends_on:
      - redis

  redis-sentinel-3:
    image: redis:latest
    container_name: redis-sentinel-3
    networks:
      - kkobuk-network
    ports:
      - "26381:26379"
    command: [ "redis-sentinel", "/etc/sentinel.conf" ]
    volumes:
      - ../sentinel/sentinel-3.conf:/etc/sentinel.conf
    depends_on:
      - redis

  eureka-service:
    image: 1202yjk/eureka-service:latest
    container_name: eureka-service
    networks:
      - kkobuk-network
    ports:
      - "8761:8761"

  config-service:
    image: 1202yjk/config-service:latest
    container_name: config-service
    ports:
      - "8888:8888"
    networks:
      - kkobuk-network
    environment:
      - spring.rabbitmq.host=rabbitmq
      - spring.profiles.active=local
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://config-service:8888/actuator/health" ]
      interval: 10s
      timeout: 10s
      retries: 5

  apigateway-service:
    image: 1202yjk/apigateway-service:latest
    container_name: apigateway-service
    networks:
      - kkobuk-network
    ports:
      - "8000:8000"
    environment:
      - spring.cloud.config.uri=http://config-service:8888
      - spring.rabbitmq.host=rabbitmq
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 10
    depends_on:
      config-service:
        condition: service_healthy

  auction-service:
    image: 1202yjk/auction-service:latest
    container_name: auction-service
    ports:
      - "8082:8082"
    environment:
      - spring.cloud.config.uri=http://config-service:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.redis.host=redis # Redis 마스터 설정
      - spring.redis.password=kkobuk # Redis 암호 설정
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      apigateway-service:
        condition: service_healthy
    networks:
      - kkobuk-network

  main-service:
    image: 1202yjk/main-service:latest
    container_name: main-service
    ports:
      - "8081:8081"
    environment:
      - spring.cloud.config.uri=http://config-service:8888
      - spring.rabbitmq.host=rabbitmq
      - spring.redis.host=redis # Redis 마스터 설정
      - spring.redis.password=kkobuk # Redis 암호 설정
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      apigateway-service:
        condition: service_healthy
    networks:
      - kkobuk-network

networks:
  kkobuk-network:
    driver: bridge
